{"version":3,"sources":["components/moreInfoWeather/MoreInfoToday.js","components/moreInfoWeather/CardPrediction.js","components/moreInfoWeather/WeatherPrediction.js","components/moreInfoWeather/MoreInfoWeather.js","components/WeatherToday/SearchPlace.js","components/WeatherToday/TempToday.js","components/WeatherToday/WeatherToday.js","helpers/getWeatherCurrentLatLon.js","helpers/getApiWeatherPrediction.js","helpers/getApiWheatherBycity.js","WeatherApp.js","helpers/getApiGeolocalizacion.js","index.js"],"names":["MoreInfoToday","data","className","wind","speed","main","humidity","id","type","min","max","value","style","background","visibility","pressure","CardPrediction","icon","isCelsius","width","height","backgroundImage","backgroundRepeat","parseInt","WeatherPrediction","dataPredict","daily","map","el","index","temp","weather","MoreInfoWeather","SearchPlace","setPlace","handleClickSearch","useState","inputValue","setInputValue","onSubmit","e","preventDefault","onChange","target","onClick","TempToday","buttonConvert","dateToday","Date","display","justifyContent","alignItems","class","description","toDateString","paddingRight","name","WeatherToday","isSearch","setData","getFetchWeather","lat","lon","a","URL","fetch","response","json","getApiWeatherPrediction","res","getApiWheatherBycity","city","WeatherApp","setDataPredict","setIsSearch","place","setIsCelcius","useEffect","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","err","jsonData","jsonPredict","funcGetLatLon","length","coord","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7470d390.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport const MoreInfoToday = ( {data} ) => {\r\n\r\n    return(\r\n        <div className=\"more-info-content-item\">\r\n            <div className=\"more-info-item\">\r\n                <h2>Wind status</h2>\r\n                <h2> {data?.wind?.speed} mph</h2>\r\n            </div>\r\n\r\n            <div className=\"more-info-item\">\r\n                <h2>Humidity</h2>\r\n                <h2> {data?.main?.humidity} % </h2>\r\n                <input id=\"myinput\" type=\"range\" min=\"0\" max=\"100\" value={ data?.main?.humidity }  style={ { background:'linear-gradient(to right, #FFEC65 0%, #FFEC65 ' + data?.main?.humidity + '%, #fff ' + data?.main?.humidity + '%, white 100%)' } }/>\r\n            </div>\r\n\r\n            <div className=\"more-info-item\">\r\n                <h2>visibility</h2>\r\n                <h2> { data?.visibility } </h2>\r\n            </div>\r\n\r\n            <div className=\"more-info-item\">\r\n                <h2>Air Pressure</h2>\r\n                <h2> { data?.main?.pressure } </h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nexport const CardPrediction = ( {min, max, icon, isCelsius} ) => {\r\n\r\n    return(\r\n        <div className=\"predic-card\">\r\n            <div className=\"img-background\" style={ { width:'120px', height:'80px', backgroundImage:`url(https://openweathermap.org/img/wn/${icon}@2x.png)`, backgroundRepeat: 'no-repeat'} }></div>\r\n            <div className=\"predict-card-min-max\">\r\n               \r\n                {\r\n                    isCelsius === \"c\"\r\n                        ?  <h3> { parseInt( min ) } 째C </h3>\r\n                        :  <h3> { parseInt( (min * 9/5) + 32 ) } 째F</h3>\r\n                }\r\n\r\n                {\r\n                    isCelsius === \"c\"\r\n                        ?  <h3> { parseInt( max ) } 째C </h3>\r\n                        :  <h3> { parseInt( (max * 9/5) + 32 ) } 째F</h3>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { CardPrediction } from './CardPrediction';\r\n\r\n\r\nexport const WeatherPrediction = ( {dataPredict, isCelsius} ) => {\r\n\r\n\r\n    return(\r\n        <div className=\"predicton-container\">\r\n\r\n        {\r\n            dataPredict?.daily?.map( (el, index) => index < 5 && <CardPrediction key={index} min={el.temp.min} max={el.temp.max} icon={el.weather[0].icon} isCelsius={ isCelsius }/> )\r\n        }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { MoreInfoToday } from './MoreInfoToday';\r\nimport { WeatherPrediction } from './WeatherPrediction';\r\n\r\nexport const MoreInfoWeather = ( {data, dataPredict, isCelsius} ) => {\r\n\r\n    \r\n\r\n    return(\r\n        <div className=\"more-info-content\">\r\n            \r\n            <WeatherPrediction dataPredict={dataPredict} isCelsius={ isCelsius }/>\r\n\r\n            <h2>Today's Hightlights</h2>\r\n\r\n            <MoreInfoToday data={ data } />\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\";\r\n\r\n\r\nexport const SearchPlace = ( {setPlace, handleClickSearch} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setPlace(inputValue);\r\n        handleClickSearch();\r\n    }\r\n\r\n    const handleOnchange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <form className=\"form-search-place\" onSubmit={handleSubmit}>\r\n                <input onChange={ handleOnchange } value={ inputValue } type=\"text\" />\r\n            </form>\r\n\r\n            <button className=\"search-place-close\" onClick={ handleClickSearch }>X</button>\r\n            <h2>Search Place</h2>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const TempToday = ( {data, handleClickSearch, isCelsius, buttonConvert } ) => {\r\n\r\n    const dateToday = new Date();\r\n\r\n    return(\r\n        <>\r\n            <button className=\"search-place\" onClick={ handleClickSearch }>Search for place</button>\r\n\r\n            <div className=\"\" style={ { width:'100%', height:'40%', display: \"flex\", justifyContent: \"center\", alignItems:\"center\"} }>\r\n            {\r\n                data.weather && <div className=\"img-background margin-top-100\" style={ { width:'200px', height:'150px', backgroundImage:`url(https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png)` } }></div>\r\n            }\r\n            </div>\r\n    \r\n            {\r\n                <div class=\"flex-row data-temp-padding\">\r\n                    {\r\n                        isCelsius === \"c\" \r\n                            ? <><h2 className=\"data-temp\"> { data?.main?.temp}  </h2>  <h2 className=\"data-symbol\" >째c</h2> </>\r\n                            : <><h2 className=\"data-temp\"> { parseInt((data?.main?.temp * 9/5) + 32 ) }  </h2> <h2 className=\"data-symbol\" >째f</h2> </>\r\n                    }\r\n                </div>\r\n            }\r\n\r\n            <h2 className=\" margin-top-info\"> { data.weather && data.weather[0].description}</h2> \r\n\r\n            <h2 className=\" margin-top-info\"> { dateToday.toDateString() } </h2>\r\n        \r\n            <div className=\"flex-row margin-top-info\">\r\n            <i class=\"fas fa-map-marker-alt\" style={ {paddingRight:\"8px\"} }></i>\r\n            <h2>  { data?.name } </h2>\r\n            </div>\r\n\r\n            <div class=\"button-convert-temp margin-top-info\">\r\n                <h2  className={ isCelsius ==='c' ? \"button-convert-active\" : \"button-convert-deactive\" } onClick={ buttonConvert }> 째c </h2>\r\n                <h2  className={ isCelsius ==='f' ? \"button-convert-active\" : \"button-convert-deactive\" } onClick={ buttonConvert }> 째f </h2>\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport { SearchPlace } from './SearchPlace';\r\nimport { TempToday } from './TempToday';\r\n\r\nexport const WeatherToday = ( {data, setData, isSearch, setPlace, handleClickSearch, isCelsius, buttonConvert } ) => {\r\n\r\n\r\n    return(\r\n        <div className=\"wheather-today\">\r\n                {\r\n                    isSearch \r\n                        ? <SearchPlace setPlace={setPlace} handleClickSearch={ handleClickSearch } /> \r\n                        : <>\r\n                            <TempToday data={data} handleClickSearch={ handleClickSearch } isCelsius={ isCelsius } buttonConvert ={ buttonConvert  }/>\r\n                          </>\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\n","\r\nexport const getFetchWeather = async ( lat, lon ) => {\r\n    let URL = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=bb638100fe22978df4a409a78ace9614&units=metric`;\r\n    const response = await fetch(URL)\r\n    const json = await response.json();\r\n    return json;\r\n}\r\n\r\n\r\n","\r\n\r\nexport const getApiWeatherPrediction = async (lat, lon) => {\r\n\r\n    const URL = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=minutely,hourly&appid=bb638100fe22978df4a409a78ace9614&units=metric`;\r\n\r\n    const res = await fetch(URL);\r\n    const json = await res.json();\r\n    return json;\r\n}","\r\nexport const getApiWheatherBycity = async ( city ) => {\r\n    let URL = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=bb638100fe22978df4a409a78ace9614&units=metric`;\r\n    const response = await fetch(URL)\r\n    const json = await response.json();\r\n    return json;\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport { MoreInfoWeather } from './components/moreInfoWeather/MoreInfoWeather';\r\nimport { WeatherToday } from './components/WeatherToday/WeatherToday';\r\nimport { getApiGeolocalizacion } from './helpers/getApiGeolocalizacion';\r\nimport { getFetchWeather } from './helpers/getWeatherCurrentLatLon';\r\nimport { getApiWeatherPrediction} from './helpers/getApiWeatherPrediction';\r\n\r\nimport './normalize.css';\r\nimport './weatherapp.css';\r\nimport { getApiWheatherBycity } from './helpers/getApiWheatherBycity';\r\n\r\n\r\nexport const WeatherApp = () => {\r\n\r\n    const [data, setData] = useState( [] );\r\n    const [dataPredict, setDataPredict] = useState( [] );\r\n\r\n    const [isSearch, setIsSearch] = useState(false);\r\n    const [place, setPlace] = useState('');\r\n\r\n    const [isCelsius, setIsCelcius] = useState('c');\r\n\r\n\r\n    useEffect( () => {\r\n        const funcGetLatLon = async () => {\r\n            const {lat, lon} = await getApiGeolocalizacion();\r\n            const jsonData = await getFetchWeather(lat, lon);\r\n            jsonData.main.temp = parseInt( jsonData.main.temp );\r\n            setData( jsonData ) \r\n\r\n            const jsonPredict = await getApiWeatherPrediction(lat, lon);\r\n            setDataPredict( jsonPredict );\r\n\r\n        }\r\n        funcGetLatLon();\r\n    }, [])\r\n\r\n    useEffect( () => {\r\n        // !place\r\n        if(place.length > 1){\r\n            const funcGetLatLon = async () => {\r\n                const jsonData = await getApiWheatherBycity(place);\r\n                jsonData.main.temp = parseInt( jsonData.main.temp );\r\n                setData( jsonData );\r\n\r\n                let {lat,lon} = jsonData.coord;\r\n                console.log(lat, lon);\r\n                const jsonPredict = await getApiWeatherPrediction(lat, lon);\r\n                setDataPredict( jsonPredict );\r\n            }\r\n\r\n            funcGetLatLon();\r\n        }\r\n    }, [place] )\r\n\r\n    const handleClickSearch = () => {\r\n        setIsSearch( !isSearch );\r\n    }\r\n\r\n    const buttonConvert = () => {\r\n        isCelsius === \"c\" ? setIsCelcius(\"f\") : setIsCelcius(\"c\");\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"container-app\">\r\n        \r\n            <WeatherToday data={ data } setData={ setData } isSearch={ isSearch } setPlace={ setPlace } handleClickSearch={handleClickSearch} isCelsius={ isCelsius }  buttonConvert={ buttonConvert  } />\r\n\r\n            \r\n            <MoreInfoWeather data={ data } dataPredict={ dataPredict } isCelsius={ isCelsius }/>\r\n            \r\n        </div>\r\n    )\r\n}","//import { getFetchWeather } from \"./getWeatherCurrentLatLon\";\r\n\r\n\r\nexport const getApiGeolocalizacion = ( ) => {\r\n    \r\n    return new Promise( (resolve, reject) => {\r\n        if( !navigator.geolocation ) return\r\n        let lat, lon;\r\n\r\n        const sucess = (position) => {\r\n            lat = position.coords.latitude;\r\n            lon = position.coords.longitude;\r\n            \r\n            resolve ( {lat, lon} )\r\n        }        \r\n\r\n        navigator.geolocation.getCurrentPosition( sucess, (err) => resolve( {lat:40.6643, lon:-73.9385} ) )\r\n        } )\r\n    \r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { WeatherApp } from './WeatherApp';\n\n\nReactDOM.render(\n  <WeatherApp /> ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}